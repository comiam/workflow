import runtime;
import lingo/pegcode/driver;

ArExp ::= ArSum, ArMult, ArInt;
ArSum(l:ArExp, r:ArExp);
ArMult(l:ArExp, r:ArExp);
ArInt(val:int);

ArRpn(rpn:[RpnNode]);
RpnNode ::= RpnOp, RpnArg;
RpnOp(id:string, op: (int,int)-> int);
RpnArg(val:int);

s2ar(s:string) -> ArExp {
	gram="#include syntax_tree_exp.lingo";
	parsic(compilePegGrammar(gram), s, defaultPegActions);
}

ar2s(ar:ArExp) -> string {
	switch(ar) {
		ArSum(l, r): 
			concatStrings(["(", ar2s(l), " + ", ar2s(r), ")"]);
		ArMult(l, r): 
			concatStrings(["(", ar2s(l), " * ", ar2s(r), ")"]);
		ArInt(val): 
			i2s(val);
	}
}

ar2rpn(ar:ArExp) -> ArRpn {
	
}

main() -> void {
	println(ar2s(s2ar("                    (1   +(2  *4)       		    )      ")));
	println(s2ans(s2ar("(1+(2*4))")));
}